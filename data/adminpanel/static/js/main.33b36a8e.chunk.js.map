{"version":3,"sources":["components/LoadingComponent/LoadingComponent.module.css","components/ProductForm/ProductForm.module.css","components/layout/App/App.module.css","api/agent.ts","stores/ProductStore.ts","stores/store.ts","components/pages/HomePage/HomePage.tsx","components/pages/NotFoundPage/NotFoundPage.tsx","components/LoadingComponent/LoadingComponent.tsx","components/pages/ProductsPage/ProductList.tsx","components/pages/ProductsPage/ProductsPage.tsx","hooks/routesHooks.ts","components/common/form/TextInput.tsx","components/ProductForm/ProductForm.tsx","components/layout/NavBar/NavBar.tsx","components/layout/App/App.tsx","index.tsx"],"names":["module","exports","apiUrl","process","axiosInstance","axios","create","baseURL","sleep","delay","Promise","resolve","setTimeout","interceptors","response","use","a","responseBody","data","agent","list","page","pageSize","get","params","then","details","id","product","post","update","put","delete","ProductStore","productRegistry","Map","loadingInitial","loading","amount","setProduct","set","loadProducts","clear","pagination","runInAction","forEach","console","log","setLoadingInitial","loadProduct","has","createProduct","updateProduct","deleteProduct","setLoading","value","makeAutoObservable","this","Array","from","values","store","productStore","StoreContext","createContext","useStore","useContext","HomePage","NotFoundPage","LoadingComponent","label","className","style","wrapper","color","observer","totalPages","useState","processedId","setProcessedId","products","history","useHistory","length","push","Table","celled","Header","Row","HeaderCell","Body","map","buttonLoading","Cell","width","title","price","description","Button","icon","disabled","onClick","Footer","colSpan","Menu","floated","Item","as","Link","to","Math","max","Icon","name","_","idx","min","query","URLSearchParams","useLocation","search","location","Number","ceil","useEffect","key","TextInput","placeholder","type","useField","field","meta","Form","Field","error","touched","Label","basic","initialValues","validationSchema","Yup","required","positive","useParams","catch","form","enableReinitialize","onSubmit","productValues","newProduct","uuid","isSubmitting","isValid","dirty","handleSubmit","autoComplete","content","NavBar","Container","NavLink","exact","App","app","path","component","ProductsPage","ProductForm","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.33b36a8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LoadingComponent_wrapper__WTtdA\",\"label\":\"LoadingComponent_label__KWaQ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProductForm_form__2c6Kw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3BmVS\"};","import axios, { AxiosResponse } from 'axios';\n\nimport { PaginationDto } from '../models/Common';\nimport { Product } from '../models/Product';\n\nconst apiUrl =\n  process.env.NODE_ENV === 'production'\n    ? process.env.REACT_APP_API_URL\n    : process.env.REACT_APP_API_URL_DEV;\n\nif (!apiUrl) {\n  throw new Error('Environment variable for domain api not provided');\n}\n\nexport const axiosInstance = axios.create({\n  baseURL: apiUrl,\n});\n\nconst sleep = (delay: number) =>\n  new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n\naxiosInstance.interceptors.response.use(async (response) => {\n  await sleep(1000);\n  return response;\n});\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst products = {\n  list: (page: number, pageSize: number) =>\n    axiosInstance\n      .get<PaginationDto<Product>>('/products', { params: { page, pageSize } })\n      .then(responseBody),\n  details: (id: string) =>\n    axiosInstance.get<Product>(`/products/${id}`).then(responseBody),\n  create: (product: Product) => axiosInstance.post<void>(`/products`, product),\n  update: (product: Product) =>\n    axiosInstance\n      .put<void>(`/products/${product.id}`, product)\n      .then(responseBody),\n  delete: (id: string) =>\n    axiosInstance.delete<void>(`/products/${id}`).then(responseBody),\n};\n\nexport const agent = {\n  products,\n};\n","import { makeAutoObservable, runInAction } from 'mobx';\nimport { agent } from '../api/agent';\nimport { Product } from '../models/Product';\n\nexport class ProductStore {\n  productRegistry: Map<string, Product> = new Map();\n  loadingInitial: boolean = false;\n  loading: boolean = false;\n  amount: number = 0;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get products() {\n    return Array.from(this.productRegistry.values());\n  }\n\n  private setProduct = (product: Product) => {\n    this.productRegistry.set(product.id, product);\n  };\n\n  loadProducts = async (page: number, pageSize: number) => {\n    this.loadingInitial = true;\n    this.productRegistry.clear();\n    try {\n      const pagination = await agent.products.list(page, pageSize);\n      runInAction(() => {\n        this.amount = pagination.amount;\n        pagination.data.forEach((product) => this.setProduct(product));\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.setLoadingInitial(false);\n    }\n  };\n\n  loadProduct = async (id: string) => {\n    if (this.productRegistry.has(id)) return this.productRegistry.get(id)!;\n    this.setLoadingInitial(true);\n    console.log('load product ', this.loadingInitial);\n    const product = await agent.products.details(id);\n    this.setLoadingInitial(false);\n    return product;\n  };\n\n  createProduct = async (product: Product) => {\n    try {\n      await agent.products.create(product);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  updateProduct = async (product: Product) => {\n    try {\n      await agent.products.update(product);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  deleteProduct = async (id: string) => {\n    try {\n      this.setLoading(true);\n      await agent.products.delete(id);\n      runInAction(() => {\n        this.productRegistry.delete(id);\n        this.amount = this.amount - 1;\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.setLoading(false);\n    }\n  };\n\n  setLoadingInitial = (value: boolean) => {\n    this.loadingInitial = value;\n  };\n\n  setLoading = (value: boolean) => {\n    this.loading = value;\n  };\n}\n","import { createContext, useContext } from 'react';\n\nimport { ProductStore } from './ProductStore';\n\ninterface Store {\n  productStore: ProductStore;\n}\n\nexport const store: Store = {\n  productStore: new ProductStore(),\n};\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}\n","const HomePage = () => {\n  return <div>Home Page</div>;\n};\n\nexport default HomePage;\n","const NotFoundPage = () => {\n  return <div>Not Found</div>;\n};\n\nexport default NotFoundPage;\n","import { PulseLoader } from 'react-spinners';\n\nimport style from './LoadingComponent.module.css';\n\ninterface Props {\n  label: string;\n}\n\nfunction LoadingComponent({ label }: Props) {\n  return (\n    <div className={style.wrapper}>\n      <p className={style.label}>{label}</p>\n      <PulseLoader color=\"#2185d0\" />\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n","import { observer } from 'mobx-react-lite';\nimport { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button, Icon, Menu, Table } from 'semantic-ui-react';\n\nimport { useStore } from '../../../stores/store';\n\ninterface Props {\n  page: number;\n  totalPages: number;\n}\n\nconst ProductList = ({ page, totalPages }: Props) => {\n  const [processedId, setProcessedId] = useState('');\n  const {\n    productStore: { products, loading, deleteProduct },\n  } = useStore();\n  const history = useHistory();\n\n  if (products.length === 0) {\n    history.push(`/products`);\n  }\n\n  return (\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Title</Table.HeaderCell>\n          <Table.HeaderCell>Price</Table.HeaderCell>\n          <Table.HeaderCell>Description</Table.HeaderCell>\n          <Table.HeaderCell>Actions</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {products.map((product) => {\n          const buttonLoading = loading && product.id === processedId;\n          return (\n            <Table.Row key={product.id}>\n              <Table.Cell width=\"2\">{product.title}</Table.Cell>\n              <Table.Cell width=\"2\">${product.price}</Table.Cell>\n              <Table.Cell width=\"3\">{product.description}</Table.Cell>\n              <Table.Cell width=\"1\">\n                <Button\n                  icon=\"remove\"\n                  loading={buttonLoading}\n                  disabled={buttonLoading}\n                  onClick={() => {\n                    setProcessedId(product.id);\n                    deleteProduct(product.id);\n                  }}\n                />\n                <Button\n                  icon=\"edit\"\n                  onClick={() => {\n                    history.push(`/manage/${product.id}`);\n                  }}\n                />\n              </Table.Cell>\n            </Table.Row>\n          );\n        })}\n      </Table.Body>\n\n      <Table.Footer>\n        <Table.Row>\n          <Table.HeaderCell colSpan=\"4\">\n            <Menu floated=\"right\" pagination>\n              <Menu.Item\n                icon\n                as={Link}\n                to={`/products?page=${Math.max(1, page - 1)}`}\n                disabled={page === 1}\n              >\n                <Icon name=\"chevron left\" />\n              </Menu.Item>\n              {[...new Array(totalPages)].map((_, idx) => (\n                <Menu.Item\n                  key={idx}\n                  as={Link}\n                  to={`/products?page=${idx + 1}`}\n                  disabled={idx + 1 === page}\n                >\n                  {idx + 1}\n                </Menu.Item>\n              ))}\n              <Menu.Item\n                icon\n                as={Link}\n                to={`/products?page=${Math.min(totalPages, page + 1)}`}\n                disabled={page === totalPages}\n              >\n                <Icon name=\"chevron right\" />\n              </Menu.Item>\n            </Menu>\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Footer>\n    </Table>\n  );\n};\n\nexport default observer(ProductList);\n","import { observer } from 'mobx-react-lite';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router';\n\nimport { useQuery } from '../../../hooks/routesHooks';\nimport { useStore } from '../../../stores/store';\nimport LoadingComponent from '../../LoadingComponent/LoadingComponent';\nimport ProductList from './ProductList';\n\nconst ProductsPage = () => {\n  const {\n    productStore: { amount, loadingInitial, loadProducts },\n  } = useStore();\n  const query = useQuery();\n  const location = useLocation();\n  const page = query.has('page') ? Number(query.get('page')) : 1;\n  const pageSize = query.has('pageSize') ? Number(query.get('pageSize')) : 5;\n  const totalPages = Math.ceil(amount / pageSize);\n\n  useEffect(() => {\n    loadProducts(page, pageSize);\n  }, [page, pageSize, location.key, loadProducts]);\n\n  if (loadingInitial) return <LoadingComponent label=\"Loading products...\" />;\n\n  return (\n    <div>\n      {amount === 0 ? (\n        <div>No products avaliable</div>\n      ) : (\n        <ProductList page={page} totalPages={totalPages} />\n      )}\n    </div>\n  );\n};\n\nexport default observer(ProductsPage);\n","import { useLocation } from 'react-router-dom';\n\nexport const useQuery = () => {\n  return new URLSearchParams(useLocation().search);\n};\n","import { useField } from 'formik';\nimport { HTMLInputTypeAttribute } from 'react';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n  name: string;\n  placeholder: string;\n  label: string;\n  type?: HTMLInputTypeAttribute;\n}\n\nconst TextInput = ({ placeholder, name, label, type = 'text' }: Props) => {\n  const [field, meta] = useField(name);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{label}</label>\n      <input {...field} type={type} placeholder={placeholder} />\n      {meta.touched && meta.error ? (\n        <Label color=\"red\" basic>\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n};\n\nexport default TextInput;\n","import { useHistory, useParams } from 'react-router';\nimport { Formik, Form } from 'formik';\nimport { useEffect, useState } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { v4 as uuid } from 'uuid';\nimport * as Yup from 'yup';\n\nimport { Product } from '../../models/Product';\nimport { observer } from 'mobx-react-lite';\nimport { useStore } from '../../stores/store';\nimport LoadingComponent from '../LoadingComponent/LoadingComponent';\nimport TextInput from '../common/form/TextInput';\nimport style from './ProductForm.module.css';\n\nconst initialValues: Product = {\n  id: '',\n  title: '',\n  price: 10,\n  description: '',\n};\n\nconst validationSchema = Yup.object({\n  title: Yup.string().required('The product title is required'),\n  price: Yup.number()\n    .positive('The product price must be greater than zero')\n    .required('The product price is required'),\n  description: Yup.string().required('The product price is required'),\n});\n\nconst ProductForm = () => {\n  const [product, setProduct] = useState<Product>(initialValues);\n  const history = useHistory();\n  const { id } = useParams<{ id: string }>();\n  const {\n    productStore: { loadingInitial, loadProduct, createProduct, updateProduct },\n  } = useStore();\n\n  useEffect(() => {\n    if (id) {\n      loadProduct(id)\n        .then((data) =>\n          setProduct({\n            id: data.id,\n            title: data.title,\n            price: data.price,\n            description: data.description,\n          })\n        )\n        .catch((error) => {\n          console.log('Can`t load product', error);\n          history.push('/notfound');\n        });\n    }\n  }, [id, loadProduct, history]);\n\n  const onSubmit = (productValues: Product) => {\n    if (!productValues.id) {\n      const newProduct = { ...productValues, id: uuid() };\n      createProduct(newProduct).then(() => {\n        history.push('/products');\n      });\n    } else {\n      updateProduct(productValues).then(() => {\n        history.push('/products');\n      });\n    }\n  };\n\n  if (loadingInitial) return <LoadingComponent label=\"Loading product\" />;\n\n  return (\n    <div className={style.form}>\n      <Formik\n        enableReinitialize\n        initialValues={product}\n        validationSchema={validationSchema}\n        onSubmit={(values) => onSubmit(values)}\n      >\n        {({ isSubmitting, isValid, dirty, handleSubmit }) => (\n          <Form className=\"ui form\" autoComplete=\"off\" onSubmit={handleSubmit}>\n            <TextInput name=\"title\" label=\"Title\" placeholder=\"Product Title\" />\n            <TextInput\n              name=\"price\"\n              label=\"Price\"\n              placeholder=\"Product Price\"\n              type=\"number\"\n            />\n            <TextInput\n              name=\"description\"\n              label=\"Description\"\n              placeholder=\"Product Description\"\n            />\n            <Button\n              type=\"submit\"\n              content=\"Submit\"\n              floated=\"right\"\n              positive\n              loading={isSubmitting}\n              disabled={isSubmitting || !isValid || !dirty}\n            />\n            <Button\n              as={Link}\n              to=\"/products\"\n              type=\"button\"\n              content=\"Cancel\"\n              floated=\"right\"\n            />\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default observer(ProductForm);\n","import { NavLink } from 'react-router-dom';\nimport { Container, Menu } from 'semantic-ui-react';\n\nconst NavBar = () => {\n  return (\n    <div>\n      <Menu color=\"blue\">\n        <Container>\n          <Menu.Item as={NavLink} to=\"/\" name=\"Home\" exact />\n          <Menu.Item as={NavLink} to=\"/products\" name=\"Products\" />\n        </Container>\n      </Menu>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import { Route, Switch, useLocation } from 'react-router';\nimport { Container } from 'semantic-ui-react';\n\nimport HomePage from '../../pages/HomePage/HomePage';\nimport NotFoundPage from '../../pages/NotFoundPage/NotFoundPage';\nimport ProductsPage from '../../pages/ProductsPage/ProductsPage';\nimport ProductForm from '../../ProductForm/ProductForm';\nimport NavBar from '../NavBar/NavBar';\nimport style from './App.module.css';\n\nconst App = () => {\n  const location = useLocation();\n\n  return (\n    <div className={style.app}>\n      <Container>\n        <NavBar />\n        <Switch>\n          <Route path=\"/\" component={HomePage} exact />\n          <Route path=\"/products\" component={ProductsPage} />\n          <Route\n            key={location.key}\n            path={['/createProduct', '/manage/:id']}\n            component={ProductForm}\n          />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { store, StoreContext } from './stores/store';\nimport App from './components/layout/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}